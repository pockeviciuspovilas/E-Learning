#pragma checksum "C:\Users\MyPC\Documents\GitHub\E-Learning\Elearn\Views\Assign\AssignedTests.cshtml" "{ff1816ec-aa5e-4d10-87f7-6f4963833460}" "353a5b4b39ac0162bd68c02954cc098b8be2e91f"
// <auto-generated/>
#pragma warning disable 1591
[assembly: global::Microsoft.AspNetCore.Razor.Hosting.RazorCompiledItemAttribute(typeof(AspNetCore.Views_Assign_AssignedTests), @"mvc.1.0.view", @"/Views/Assign/AssignedTests.cshtml")]
namespace AspNetCore
{
    #line hidden
    using System;
    using System.Collections.Generic;
    using System.Linq;
    using System.Threading.Tasks;
    using Microsoft.AspNetCore.Mvc;
    using Microsoft.AspNetCore.Mvc.Rendering;
    using Microsoft.AspNetCore.Mvc.ViewFeatures;
#nullable restore
#line 1 "C:\Users\MyPC\Documents\GitHub\E-Learning\Elearn\Views\_ViewImports.cshtml"
using Elearn;

#line default
#line hidden
#nullable disable
#nullable restore
#line 2 "C:\Users\MyPC\Documents\GitHub\E-Learning\Elearn\Views\_ViewImports.cshtml"
using Elearn.Models;

#line default
#line hidden
#nullable disable
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"353a5b4b39ac0162bd68c02954cc098b8be2e91f", @"/Views/Assign/AssignedTests.cshtml")]
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"fdd51a6fe1f0aff8695cda020bdd558fe8d512ac", @"/Views/_ViewImports.cshtml")]
    public class Views_Assign_AssignedTests : global::Microsoft.AspNetCore.Mvc.Razor.RazorPage<List<Elearn.Models.Asign>>
    {
        #pragma warning disable 1998
        public async override global::System.Threading.Tasks.Task ExecuteAsync()
        {
            WriteLiteral("\r\n");
#nullable restore
#line 3 "C:\Users\MyPC\Documents\GitHub\E-Learning\Elearn\Views\Assign\AssignedTests.cshtml"
  
    ViewData["Title"] = "Assigned tests";

#line default
#line hidden
#nullable disable
            WriteLiteral(@"
<table class=""table table-hover table-responsive-lg"">
  <thead>
    <tr>
      <th scope=""col"">End date</th>
      <th scope=""col"">Test name</th>
      <th scope=""col"">For</th>
      <th scope=""col"">Mark</th>
      <th scope=""col""></th>
    </tr>
  </thead>
");
#nullable restore
#line 17 "C:\Users\MyPC\Documents\GitHub\E-Learning\Elearn\Views\Assign\AssignedTests.cshtml"
   for(int i=0;i< @Model.Count; i++)
  {

#line default
#line hidden
#nullable disable
            WriteLiteral("    ");
            WriteLiteral("\r\n    <tr>\r\n    <th scope=\"row\">");
#nullable restore
#line 21 "C:\Users\MyPC\Documents\GitHub\E-Learning\Elearn\Views\Assign\AssignedTests.cshtml"
               Write(Model[i].ExpireDate);

#line default
#line hidden
#nullable disable
            WriteLiteral("</th>\r\n    <td>");
#nullable restore
#line 22 "C:\Users\MyPC\Documents\GitHub\E-Learning\Elearn\Views\Assign\AssignedTests.cshtml"
   Write(Model[i].Test.Name);

#line default
#line hidden
#nullable disable
            WriteLiteral("</td>\r\n    <td>");
#nullable restore
#line 23 "C:\Users\MyPC\Documents\GitHub\E-Learning\Elearn\Views\Assign\AssignedTests.cshtml"
   Write(Model[i].Applicant.UserName);

#line default
#line hidden
#nullable disable
            WriteLiteral("</td>\r\n    <td>\r\n");
#nullable restore
#line 25 "C:\Users\MyPC\Documents\GitHub\E-Learning\Elearn\Views\Assign\AssignedTests.cshtml"
       if(Model[i].Result.Count != 0)
      {
        if(Model[i].Result.SingleOrDefault().Mark >= 0)
        {
          

#line default
#line hidden
#nullable disable
#nullable restore
#line 29 "C:\Users\MyPC\Documents\GitHub\E-Learning\Elearn\Views\Assign\AssignedTests.cshtml"
           Write(Model[i].Result.SingleOrDefault().Mark);

#line default
#line hidden
#nullable disable
#nullable restore
#line 29 "C:\Users\MyPC\Documents\GitHub\E-Learning\Elearn\Views\Assign\AssignedTests.cshtml"
                                                              
        }
        else if(Model[i].Result.SingleOrDefault().Mark == -1)
        {
          

#line default
#line hidden
#nullable disable
            WriteLiteral("Not solved");
#nullable restore
#line 33 "C:\Users\MyPC\Documents\GitHub\E-Learning\Elearn\Views\Assign\AssignedTests.cshtml"
                                 
        }
        else if(Model[i].Result.SingleOrDefault().Mark == -2)
        {
          

#line default
#line hidden
#nullable disable
            WriteLiteral("Not rated");
#nullable restore
#line 37 "C:\Users\MyPC\Documents\GitHub\E-Learning\Elearn\Views\Assign\AssignedTests.cshtml"
                                
        }
      }
      else
      {
        

#line default
#line hidden
#nullable disable
            WriteLiteral("0");
#nullable restore
#line 42 "C:\Users\MyPC\Documents\GitHub\E-Learning\Elearn\Views\Assign\AssignedTests.cshtml"
                      
      }

#line default
#line hidden
#nullable disable
            WriteLiteral("\r\n\r\n    </td>\r\n    <td><input type=\"button\" class=\"btn btn-outline-danger\" value=\"Delete\"");
            BeginWriteAttribute("onclick", " onclick=\"", 1133, "\"", 1206, 5);
            WriteAttributeValue("", 1143, "location.href=\'", 1143, 15, true);
#nullable restore
#line 47 "C:\Users\MyPC\Documents\GitHub\E-Learning\Elearn\Views\Assign\AssignedTests.cshtml"
WriteAttributeValue("", 1158, Url.Action("Delete", "Assign"), 1158, 31, false);

#line default
#line hidden
#nullable disable
            WriteAttributeValue("", 1189, "?id=", 1189, 4, true);
#nullable restore
#line 47 "C:\Users\MyPC\Documents\GitHub\E-Learning\Elearn\Views\Assign\AssignedTests.cshtml"
WriteAttributeValue("", 1193, Model[i].Id, 1193, 12, false);

#line default
#line hidden
#nullable disable
            WriteAttributeValue("", 1205, "\'", 1205, 1, true);
            EndWriteAttribute();
            WriteLiteral(" /></td>\r\n    </tr>\r\n");
#nullable restore
#line 49 "C:\Users\MyPC\Documents\GitHub\E-Learning\Elearn\Views\Assign\AssignedTests.cshtml"
  } 

#line default
#line hidden
#nullable disable
            WriteLiteral("  <tbody>\r\n\r\n  </tbody>\r\n</table>");
        }
        #pragma warning restore 1998
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.ViewFeatures.IModelExpressionProvider ModelExpressionProvider { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IUrlHelper Url { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IViewComponentHelper Component { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IJsonHelper Json { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper<List<Elearn.Models.Asign>> Html { get; private set; }
    }
}
#pragma warning restore 1591
